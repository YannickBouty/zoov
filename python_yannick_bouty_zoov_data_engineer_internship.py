# -*- coding: utf-8 -*-
"""PYTHON YANNICK BOUTY - ZOOV - DATA ENGINEER INTERNSHIP.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zHwTWPnyT1ceI7ZgrdnRN4_SfvSeUUlL

# PYTHON YANNICK BOUTY - ZOOV - DATA ENGINEER INTERNSHIP

## Chargement des données
"""

import folium
import json
import pandas as pd

#Chargement des données
coordonnees_departements_france = pd.read_json('https://france-geojson.gregoiredavid.fr/repo/departements.geojson')
coordonnees_departements_france_geajson = 'https://france-geojson.gregoiredavid.fr/repo/departements.geojson'
donnees_covid_departements_france = pd.read_csv('https://www.data.gouv.fr/fr/datasets/r/63352e38-d353-4b54-bfd1-f1b3ee1cabd7',sep=';')

"""## Découverte des données"""

#Visualisation des données coordonnées
coordonnees_departements_france.head()

#Visualisation des données covid
donnees_covid_departements_france.head()

#Visualisation des clés coordonnées
coordonnees_departements_france.keys()

#Visualisation des clés coordonnées/features
coordonnees_departements_france["features"][0].keys()

#Visualisation des clés coordonnées/features/properties
coordonnees_departements_france["features"][0]["properties"]

#Visualisation des clés Covid
donnees_covid_departements_france.keys()

#Nombre de lignes et de colonnes coordonnées
coordonnees_departements_france.shape

#Nombre de lignes et de colonnes covid
donnees_covid_departements_france.shape

#Détails des données coordonnées
coordonnees_departements_france.info()

#Détails des données covid
donnees_covid_departements_france.info()

#Description des données coordonnées.
coordonnees_departements_france.describe()

#Description des données covid
donnees_covid_departements_france.describe()

#Y-a-t-il des valeurs null dans les coordonnées ?
coordonnees_departements_france.isna().sum()

#Y-a-t-il des valeurs null dans les données covid ?
donnees_covid_departements_france.isna().sum()

#Corrélation entre les données covid ?
donnees_covid_departements_france.corr()

"""## Visualisation des hospitalisations par département"""

#Préparation des données covid
#Supression des colonnes non utiles à cette visualisation
droped_colonnes = ['sexe','jour','rea','rad','dc']
hospitalisation_covid = donnees_covid_departements_france.drop(columns=droped_colonnes)
#Sommes des hospitalisations par département
hospitalisation_covid = hospitalisation_covid.groupby('dep', as_index=False).sum()
#Suppression des départements non présents dans le GeoJson
index971 = hospitalisation_covid[hospitalisation_covid['dep'] == '971' ].index
hospitalisation_covid.drop(index971, inplace=True)
index972 = hospitalisation_covid[hospitalisation_covid['dep'] == '972' ].index
hospitalisation_covid.drop(index972, inplace=True)
index973 = hospitalisation_covid[hospitalisation_covid['dep'] == '973' ].index
hospitalisation_covid.drop(index973, inplace=True)
index974 = hospitalisation_covid[hospitalisation_covid['dep'] == '974' ].index
hospitalisation_covid.drop(index974, inplace=True)
index976 = hospitalisation_covid[hospitalisation_covid['dep'] == '976' ].index
hospitalisation_covid.drop(index976, inplace=True)

#Affichage de la carte
france = folium.Map(location=[46.539758, 2.430331], zoom_start=6)
folium.Choropleth(
    geo_data = coordonnees_departements_france_geajson,
    data = hospitalisation_covid,
    name = 'Hospitalisation',
    columns = ['dep', 'hosp'],
    key_on = 'feature.properties.code',
    fill_color='OrRd',
    legend_name='Hospitalisations par departement'
).add_to(france)

folium.LayerControl().add_to(france)

france

"""## Visualisation du nombre de personnes en réanimation par département"""

#Préparation des données covid
#Supression des colonnes non utiles à cette visualisation
droped_colonnes = ['sexe','jour','hosp','rad','dc']
reanimation_covid = donnees_covid_departements_france.drop(columns=droped_colonnes)
#Sommes des hospitalisations par département
reanimation_covid = reanimation_covid.groupby('dep', as_index=False).sum()
#Suppression des départements non présents dans le GeoJson
index971 = reanimation_covid[reanimation_covid['dep'] == '971' ].index
reanimation_covid.drop(index971, inplace=True)
index972 = reanimation_covid[reanimation_covid['dep'] == '972' ].index
reanimation_covid.drop(index972, inplace=True)
index973 = reanimation_covid[reanimation_covid['dep'] == '973' ].index
reanimation_covid.drop(index973, inplace=True)
index974 = reanimation_covid[reanimation_covid['dep'] == '974' ].index
reanimation_covid.drop(index974, inplace=True)
index976 = reanimation_covid[reanimation_covid['dep'] == '976' ].index
reanimation_covid.drop(index976, inplace=True)

#Affichage de la carte
france = folium.Map(location=[46.539758, 2.430331], zoom_start=6)
folium.Choropleth(
    geo_data = coordonnees_departements_france_geajson,
    data = reanimation_covid,
    name = 'Réanimation',
    columns = ['dep', 'rea'],
    key_on = 'feature.properties.code',
    fill_color='OrRd',
    legend_name='Nombre de personnes en reanimation par departement'
).add_to(france)

folium.LayerControl().add_to(france)

france